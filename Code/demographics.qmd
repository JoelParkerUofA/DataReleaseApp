---
output:
   html_document:
    self_contained: true
execute:
  echo: false
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

```{r setup}

# Freeze date
freeze_date <- as.Date("2025-06-30")

# Load packages
library(DBI) # Connecting to database
library(tidyverse) # Data wrangling
library(flextable) # Pretty table
library(table1)

# Connect to PAN database
con <- dbConnect(RPostgres::Postgres(),
                 user = Sys.getenv("user")
                 , password = Sys.getenv("password")
                 , dbname = Sys.getenv("dbname")
                 , host = Sys.getenv("host")
                 , port = Sys.getenv("port")
                 , sslrootcert = 'global-bundle.pem'
)

source("get_participant_ids.R")
freeze_ids <- get_participant_ids(freeze_date)

```

## Demographics Table

```{r demo-pull-data}

p2_redcap_demographics <- dbGetQuery(con, paste0("SELECT * FROM p2_redcap_demographics WHERE hml_id IN ('", paste(freeze_ids, collapse = "', '"), "')"))

```

```{r demo-wrangle-data}

demographics <- p2_redcap_demographics %>%
  mutate(age_group = case_when(age_hml %in% 40:49 ~ "40-49",
                               age_hml %in% 50:59 ~ "50-59",
                               age_hml %in% 60:69 ~ "60-69",
                               age_hml %in% 70:79 ~ "70-79"),
         race_group = case_when(hispanic_latino == "Yes" ~ "Hispanic/Latino",
                                race == "Black or African American" ~ "Non-Hispanic Black",
                                race == "White" ~ "Non-Hispanic White",
                                TRUE ~ "Other"))
  

```


```{r demo-create-table}

label(demographics$sex_hml) <- "Sex"
label(demographics$age_group) <- "Age (yrs)"
label(demographics$race_group) <- "Race/Ethnicity"

table1(~sex_hml + age_group + race_group, data = demographics,
       overall = "Available") %>%
  t1flex()

```